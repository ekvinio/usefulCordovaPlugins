#import "htmltopdf.h"#import <Cordova/CDV.h>@implementation htmltopdf- (void)print:(CDVInvokedUrlCommand*)command{    NSString* content = command.arguments[0];    NSString* name = command.arguments[1];        if (content != nil && [content length] > 0) {            NSString* fullpath = [self generatePDF:content fullname:name];            CDVPluginResult* pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_OK messageAsString:fullpath];            [self.commandDelegate sendPluginResult:pluginResult callbackId:command.callbackId];            NSLog(@"there was callback");        }        else{            CDVPluginResult* pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_ERROR];            [self.commandDelegate sendPluginResult:pluginResult callbackId:command.callbackId];        }}- (NSString *)generatePDF:(NSString *)content fullname:(NSString *) Name{    NSString *html = content;    UIMarkupTextPrintFormatter *fmt = [[UIMarkupTextPrintFormatter alloc] initWithMarkupText:html];    UIPrintPageRenderer *render = [[UIPrintPageRenderer alloc] init];    [render addPrintFormatter:fmt startingAtPageAtIndex:0];    CGRect page;    page.origin.x=20;    page.origin.y=0;        page.size.width=590;    page.size.height=615;    CGRect printable=CGRectInset( page, 0, 0 );    [render setValue:[NSValue valueWithCGRect:page] forKey:@"paperRect"];    [render setValue:[NSValue valueWithCGRect:printable] forKey:@"printableRect"];    NSMutableData * pdfData = [NSMutableData data];    UIGraphicsBeginPDFContextToData( pdfData, CGRectZero, nil );    for (NSInteger i=0; i < [render numberOfPages]; i++)    {        UIGraphicsBeginPDFPage();        CGRect bounds = UIGraphicsGetPDFContextBounds();        [render drawPageAtIndex:i inRect:bounds];    }    UIGraphicsEndPDFContext();    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);    NSString *documentsDirectory = [paths objectAtIndex:0];    NSString * pdfFile = [documentsDirectory stringByAppendingPathComponent:Name];    [pdfData writeToFile:pdfFile atomically:YES];    return pdfFile;}@end